diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 0000000..777e314
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,38 @@
+{
+    // 使用 IntelliSense 了解相关属性。 
+    // 悬停以查看现有属性的描述。
+    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "(gdb) 启动",
+            "type": "cppdbg",
+            "request": "launch",
+            "program": "${workspaceFolder}/kernel.bin",
+            "args": [],
+            "stopAtEntry": false,
+            "cwd": "${fileDirname}",
+            "environment": [],
+            "externalConsole": false,
+            "MIMode": "gdb",
+            "setupCommands": [
+                {
+                    "description": "为 gdb 启用整齐打印",
+                    "text": "-enable-pretty-printing",
+                    "ignoreFailures": true
+                },
+                {
+                    "description": "将反汇编风格设置为 Intel",
+                    "text": "-gdb-set disassembly-flavor intel",
+                    "ignoreFailures": true
+                },
+                {
+                    "description": "连接到 QEMU GDB 服务器",
+                    "text": "target remote localhost:1234",
+                    "ignoreFailures": false
+                },
+            ],
+            "preLaunchTask": "start-qemu"
+        }
+    ]
+}
\ No newline at end of file
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..afbd8fc
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,13 @@
+{
+    "nasm.extraFlags": [
+        "-I include/"
+    ],
+    "clangd.fallbackFlags": [
+        "-I${workspaceFolder}/include",
+        "-I${workspaceFolder}",
+        "-I${fileDirname}/include",
+        "-Wno-error=implicit-function-declaration"
+    ],
+    "nasm.outputFormat": "elf32",
+    "debug.allowBreakpointsEverywhere": true
+}
\ No newline at end of file
diff --git a/.vscode/tasks.json b/.vscode/tasks.json
new file mode 100644
index 0000000..d995aaa
--- /dev/null
+++ b/.vscode/tasks.json
@@ -0,0 +1,39 @@
+{
+    "version": "2.0.0",
+    "tasks": [
+        {
+            "label": "make",
+            "type": "shell",
+            "command": "make buildimg",
+            "group": {
+                "kind": "build",
+                "isDefault": true
+            },
+        },
+        {
+            "label": "start-qemu",
+            "type": "shell",
+            "command": "echo 'started' && qemu-system-i386 -drive format=raw,if=floppy,file=a.img -s -S",
+            "isBackground": true,
+            "dependsOn": "make",
+            "problemMatcher": [
+                {
+                    "owner": "custom",
+                    "pattern": [
+                        {
+                            "regexp": ".",
+                            "file": 1,
+                            "location": 2,
+                            "message": 3
+                        }
+                    ],
+                    "background": {
+                        "activeOnStart": true,
+                        "beginsPattern": "started",
+                        "endsPattern": "started"
+                    }
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/Makefile b/Makefile
index b71fda1..ff90fe1 100644
--- a/Makefile
+++ b/Makefile
@@ -33,6 +33,11 @@ OBJS		= kernel/kernel.o kernel/syscall.o kernel/start.o kernel/main.o\
 			lib/kliba.o lib/klib.o lib/string.o lib/misc.o
 DASMOUTPUT	= kernel.bin.asm
 
+ASMKFLAGS   += -g
+CFLAGS      += -fno-stack-protector -m32 -g -fPIC -Wno-error=implicit-function-declaration
+LDFLAGS 	:= $(filter-out -s, $(LDFLAGS))
+LDFLAGS     += -m elf_i386 -g
+
 # All Phony Targets
 .PHONY : everything final image clean realclean disasm all buildimg
 
@@ -42,6 +47,12 @@ nop :
 
 everything : $(ORANGESBOOT) $(ORANGESKERNEL)
 
+run: buildimg
+	qemu-system-i386 -drive format=raw,if=floppy,file=a.img
+
+debug: buildimg
+	qemu-system-i386 -drive format=raw,if=floppy,file=a.img -s -S
+
 all : realclean everything
 
 image : realclean everything clean buildimg
@@ -50,18 +61,16 @@ clean :
 	rm -f $(OBJS)
 
 realclean :
-	rm -f $(OBJS) $(ORANGESBOOT) $(ORANGESKERNEL)
+	rm -f $(OBJS) $(ORANGESBOOT) $(ORANGESKERNEL) a.img
 
 disasm :
 	$(DASM) $(DASMFLAGS) $(ORANGESKERNEL) > $(DASMOUTPUT)
 
-# We assume that "a.img" exists in current folder
-buildimg :
-	dd if=boot/boot.bin of=a.img bs=512 count=1 conv=notrunc
-	sudo mount -o loop a.img /mnt/floppy/
-	sudo cp -fv boot/loader.bin /mnt/floppy/
-	sudo cp -fv kernel.bin /mnt/floppy
-	sudo umount /mnt/floppy
+a.img : a.img.gz
+	gzip -cd a.img.gz > a.img
+
+buildimg : a.img $(ORANGESBOOT) $(ORANGESKERNEL)
+	scripts/buildimg.sh
 
 boot/boot.bin : boot/boot.asm boot/include/load.inc boot/include/fat12hdr.inc
 	$(ASM) $(ASMBFLAGS) -o $@ $<
diff --git a/kernel/clock.c b/kernel/clock.c
index 3968b91..20bd533 100644
--- a/kernel/clock.c
+++ b/kernel/clock.c
@@ -43,7 +43,7 @@ PUBLIC void milli_delay(int milli_sec)
 {
         int t = get_ticks();
 
-        while(((get_ticks() - t) * 1000 / HZ) < milli_sec) {}
+        while(((get_ticks() - t) * 1000 / HZ) < milli_sec) {delay(1);}
 }
 
 /*======================================================================*
diff --git a/krnl.map b/krnl.map
new file mode 100644
index 0000000..6392ea2
--- /dev/null
+++ b/krnl.map
@@ -0,0 +1,913 @@
+
+Merging program properties
+
+Removed property 0xc0010001 to merge kernel/start.o (0x1) and kernel/kernel.o (not found)
+Removed property 0xc0010002 to merge kernel/start.o (0x0) and kernel/kernel.o (not found)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/main.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/main.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/clock.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/clock.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/keyboard.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/keyboard.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/tty.o (0x9)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/tty.o (0x1)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/console.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/console.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/i8259.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/i8259.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/global.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/global.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/protect.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/protect.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/proc.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/proc.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/systask.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/systask.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/printf.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/printf.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and kernel/vsprintf.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and kernel/vsprintf.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and lib/klib.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and lib/klib.o (0x0)
+Removed property 0xc0010001 to merge kernel/start.o (not found) and lib/misc.o (0x1)
+Removed property 0xc0010002 to merge kernel/start.o (not found) and lib/misc.o (0x0)
+
+舍弃的输入节
+
+ .group         0x00000000        0x8 kernel/start.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/start.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/start.o
+ .group         0x00000000        0x8 kernel/main.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/main.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/main.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/main.o
+ .group         0x00000000        0x8 kernel/clock.o
+ .group         0x00000000        0x8 kernel/clock.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/clock.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/clock.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/clock.o
+ .group         0x00000000        0x8 kernel/keyboard.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/keyboard.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/keyboard.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/keyboard.o
+ .group         0x00000000        0x8 kernel/tty.o
+ .group         0x00000000        0x8 kernel/tty.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 kernel/tty.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/tty.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/tty.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/tty.o
+ .group         0x00000000        0x8 kernel/console.o
+ .group         0x00000000        0x8 kernel/console.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 kernel/console.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/console.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/console.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/console.o
+ .group         0x00000000        0x8 kernel/i8259.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/i8259.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/i8259.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/i8259.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/global.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/global.o
+ .group         0x00000000        0x8 kernel/protect.o
+ .group         0x00000000        0x8 kernel/protect.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 kernel/protect.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/protect.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/protect.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/protect.o
+ .group         0x00000000        0x8 kernel/proc.o
+ .group         0x00000000        0x8 kernel/proc.o
+ .group         0x00000000        0x8 kernel/proc.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 kernel/proc.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/proc.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/proc.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/proc.o
+ .group         0x00000000        0x8 kernel/systask.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/systask.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/systask.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/systask.o
+ .group         0x00000000        0x8 kernel/printf.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/printf.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/printf.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/printf.o
+ .group         0x00000000        0x8 kernel/vsprintf.o
+ .group         0x00000000        0x8 kernel/vsprintf.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 kernel/vsprintf.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 kernel/vsprintf.o
+ .note.GNU-stack
+                0x00000000        0x0 kernel/vsprintf.o
+ .note.gnu.property
+                0x00000000       0x28 kernel/vsprintf.o
+ .group         0x00000000        0x8 lib/klib.o
+ .group         0x00000000        0x8 lib/klib.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 lib/klib.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 lib/klib.o
+ .note.GNU-stack
+                0x00000000        0x0 lib/klib.o
+ .note.gnu.property
+                0x00000000       0x28 lib/klib.o
+ .group         0x00000000        0x8 lib/misc.o
+ .group         0x00000000        0x8 lib/misc.o
+ .text.__x86.get_pc_thunk.ax
+                0x00000000        0x4 lib/misc.o
+ .text.__x86.get_pc_thunk.bx
+                0x00000000        0x4 lib/misc.o
+ .note.GNU-stack
+                0x00000000        0x0 lib/misc.o
+ .note.gnu.property
+                0x00000000       0x28 lib/misc.o
+
+内存配置
+
+名称           来源             长度             属性
+*default*        0x00000000         0xffffffff
+
+链结器命令稿和内存映射
+
+节 .text 的地址设置到 0x30400
+LOAD kernel/kernel.o
+LOAD kernel/syscall.o
+LOAD kernel/start.o
+LOAD kernel/main.o
+LOAD kernel/clock.o
+LOAD kernel/keyboard.o
+LOAD kernel/tty.o
+LOAD kernel/console.o
+LOAD kernel/i8259.o
+LOAD kernel/global.o
+LOAD kernel/protect.o
+LOAD kernel/proc.o
+LOAD kernel/systask.o
+LOAD kernel/printf.o
+LOAD kernel/vsprintf.o
+LOAD lib/kliba.o
+LOAD lib/klib.o
+LOAD lib/string.o
+LOAD lib/misc.o
+                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
+                0x080480f4                        . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)
+
+.interp
+ *(.interp)
+
+.note.gnu.build-id
+ *(.note.gnu.build-id)
+
+.hash
+ *(.hash)
+
+.gnu.hash
+ *(.gnu.hash)
+
+.dynsym
+ *(.dynsym)
+
+.dynstr
+ *(.dynstr)
+
+.gnu.version
+ *(.gnu.version)
+
+.gnu.version_d
+ *(.gnu.version_d)
+
+.gnu.version_r
+ *(.gnu.version_r)
+
+.rel.dyn        0x080480f4        0x0
+ *(.rel.init)
+ *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
+ *(.rel.fini)
+ *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
+ *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
+ *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
+ *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
+ *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
+ *(.rel.ctors)
+ *(.rel.dtors)
+ *(.rel.got)
+ .rel.got       0x080480f4        0x0 kernel/kernel.o
+ *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
+ *(.rel.ifunc)
+
+.rel.plt        0x080480f4        0x0
+ *(.rel.plt)
+                [!provide]                        PROVIDE (__rel_iplt_start = .)
+ *(.rel.iplt)
+ .rel.iplt      0x080480f4        0x0 kernel/kernel.o
+                [!provide]                        PROVIDE (__rel_iplt_end = .)
+
+.relr.dyn
+ *(.relr.dyn)
+                0x08049000                        . = ALIGN (CONSTANT (MAXPAGESIZE))
+
+.init
+ *(SORT_NONE(.init))
+
+.plt            0x08049000        0x0
+ *(.plt)
+ *(.iplt)
+ .iplt          0x08049000        0x0 kernel/kernel.o
+
+.plt.got
+ *(.plt.got)
+
+.plt.sec
+ *(.plt.sec)
+
+.text           0x00030400     0x42af
+ *(.text.unlikely .text.*_unlikely .text.unlikely.*)
+ *(.text.exit .text.exit.*)
+ *(.text.startup .text.startup.*)
+ *(.text.hot .text.hot.*)
+ *(SORT_BY_NAME(.text.sorted.*))
+ *(.text .stub .text.* .gnu.linkonce.t.*)
+ .text          0x00030400      0x317 kernel/kernel.o
+                0x00030400                _start
+                0x00030440                hwint00
+                0x00030470                hwint01
+                0x000304a0                hwint02
+                0x000304d0                hwint03
+                0x00030500                hwint04
+                0x00030530                hwint05
+                0x00030560                hwint06
+                0x00030590                hwint07
+                0x000305c0                hwint08
+                0x000305d0                hwint09
+                0x000305e0                hwint10
+                0x000305f0                hwint11
+                0x00030600                hwint12
+                0x00030610                hwint13
+                0x00030620                hwint14
+                0x00030630                hwint15
+                0x0003063b                divide_error
+                0x00030641                single_step_exception
+                0x00030647                nmi
+                0x0003064d                breakpoint_exception
+                0x00030653                overflow
+                0x00030659                bounds_check
+                0x0003065f                inval_opcode
+                0x00030665                copr_not_available
+                0x0003066b                double_fault
+                0x0003066f                copr_seg_overrun
+                0x00030675                inval_tss
+                0x00030679                segment_not_present
+                0x0003067d                stack_exception
+                0x00030681                general_protection
+                0x00030685                page_fault
+                0x00030689                copr_error
+                0x000306d2                sys_call
+                0x000306f2                restart
+ *fill*         0x00030717        0x9 
+ .text          0x00030720       0x20 kernel/syscall.o
+                0x00030720                sendrec
+                0x00030734                printx
+ .text          0x00030740       0xc3 kernel/start.o
+                0x00030740                cstart
+ .text.__x86.get_pc_thunk.bx
+                0x00030803        0x4 kernel/start.o
+                0x00030803                __x86.get_pc_thunk.bx
+ .text          0x00030807      0x412 kernel/main.o
+                0x00030807                kernel_main
+                0x00030ad1                get_ticks
+                0x00030b14                TestA
+                0x00030b51                TestB
+                0x00030b88                TestC
+                0x00030bbf                panic
+ .text          0x00030c19      0x113 kernel/clock.o
+                0x00030c19                clock_handler
+                0x00030c7b                milli_delay
+                0x00030cc3                init_clock
+ .text.__x86.get_pc_thunk.ax
+                0x00030d2c        0x4 kernel/clock.o
+                0x00030d2c                __x86.get_pc_thunk.ax
+ .text          0x00030d30      0x739 kernel/keyboard.o
+                0x00030d30                keyboard_handler
+                0x00030da9                init_keyboard
+                0x00030e69                keyboard_read
+ .text          0x00031469      0x59c kernel/tty.o
+                0x00031469                task_tty
+                0x00031551                in_process
+                0x000317fb                tty_write
+                0x00031851                sys_printx
+ .text          0x00031a05      0x4b3 kernel/console.o
+                0x00031a05                init_screen
+                0x00031b45                is_current_console
+                0x00031b70                out_char
+                0x00031dfd                select_console
+                0x00031e43                scroll_screen
+ .text          0x00031eb8      0x168 kernel/i8259.o
+                0x00031eb8                init_8259A
+                0x00031fa1                spurious_irq
+                0x00031feb                put_irq_handler
+ .text          0x00032020        0x0 kernel/global.o
+ .text          0x00032020      0x6be kernel/protect.o
+                0x00032020                init_prot
+                0x000324b4                seg2phys
+                0x00032587                exception_handler
+ .text          0x000326de     0x189b kernel/proc.o
+                0x000326de                schedule
+                0x00032793                sys_sendrec
+                0x000328dc                send_recv
+                0x000329b0                ldt_seg_linear
+                0x00032a04                va2la
+                0x00032a80                reset_msg
+                0x00033a6a                dump_proc
+                0x00033e48                dump_msg
+ .text.__x86.get_pc_thunk.dx
+                0x00033f79        0x4 kernel/proc.o
+                0x00033f79                __x86.get_pc_thunk.dx
+ .text          0x00033f7d       0x69 kernel/systask.o
+                0x00033f7d                task_sys
+ .text          0x00033fe6       0x5f kernel/printf.o
+                0x00033fe6                printf
+ .text          0x00034045      0x33d kernel/vsprintf.o
+                0x000340b5                vsprintf
+                0x0003434c                sprintf
+ *fill*         0x00034382        0xe 
+ .text          0x00034390       0xeb lib/kliba.o
+                0x00034390                disp_str
+                0x000343ce                disp_color_str
+                0x0003440d                out_byte
+                0x00034419                in_byte
+                0x00034423                disable_irq
+                0x00034458                enable_irq
+                0x00034477                disable_int
+                0x00034479                enable_int
+ .text          0x0003447b      0x140 lib/klib.o
+                0x0003447b                itoa
+                0x00034530                disp_int
+                0x00034569                delay
+ *fill*         0x000345bb        0x5 
+ .text          0x000345c0       0x78 lib/string.o
+                0x000345c0                memcpy
+                0x000345e9                memset
+                0x0003460a                strcpy
+                0x00034622                strlen
+ .text          0x00034638       0x77 lib/misc.o
+                0x00034638                spin
+                0x00034663                assertion_failure
+ *(.gnu.warning)
+
+.fini
+ *(SORT_NONE(.fini))
+                [!provide]                        PROVIDE (__etext = .)
+                [!provide]                        PROVIDE (_etext = .)
+                [!provide]                        PROVIDE (etext = .)
+                0x00035000                        . = ALIGN (CONSTANT (MAXPAGESIZE))
+                0x00035000                        . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))
+
+.rodata         0x00035000      0xd91
+ *(.rodata .rodata.* .gnu.linkonce.r.*)
+ .rodata        0x00035000       0x47 kernel/start.o
+ *fill*         0x00035047        0x1 
+ .rodata        0x00035048       0x3f kernel/main.o
+ *fill*         0x00035087        0x1 
+ .rodata        0x00035088       0x64 kernel/keyboard.o
+ *fill*         0x000350ec        0x4 
+ .rodata        0x000350f0       0xc0 kernel/tty.o
+ .rodata        0x000351b0       0x11 kernel/i8259.o
+ *fill*         0x000351c1       0x1f 
+ .rodata        0x000351e0      0x540 kernel/protect.o
+ .rodata        0x00035720      0x5fe kernel/proc.o
+ .rodata        0x00035d1e       0x11 kernel/systask.o
+ *fill*         0x00035d2f        0x1 
+ .rodata        0x00035d30       0x61 lib/misc.o
+
+.rodata1
+ *(.rodata1)
+
+.eh_frame_hdr
+ *(.eh_frame_hdr)
+ *(.eh_frame_entry .eh_frame_entry.*)
+
+.eh_frame       0x00035d94      0x92c
+ *(.eh_frame)
+ .eh_frame      0x00035d94       0x50 kernel/start.o
+ .eh_frame      0x00035de4       0xb8 kernel/main.o
+                                 0xe4 (松开之前的大小)
+ .eh_frame      0x00035e9c       0x80 kernel/clock.o
+                                 0xac (松开之前的大小)
+ .eh_frame      0x00035f1c       0xfc kernel/keyboard.o
+                                0x128 (松开之前的大小)
+ .eh_frame      0x00036018      0x114 kernel/tty.o
+                                0x154 (松开之前的大小)
+ .eh_frame      0x0003612c      0x124 kernel/console.o
+                                0x164 (松开之前的大小)
+ .eh_frame      0x00036250       0x6c kernel/i8259.o
+                                 0x98 (松开之前的大小)
+ .eh_frame      0x000362bc       0xb8 kernel/protect.o
+                                 0xf8 (松开之前的大小)
+ .eh_frame      0x00036374      0x1fc kernel/proc.o
+                                0x23c (松开之前的大小)
+ .eh_frame      0x00036570       0x1c kernel/systask.o
+                                 0x48 (松开之前的大小)
+ .eh_frame      0x0003658c       0x24 kernel/printf.o
+                                 0x50 (松开之前的大小)
+ .eh_frame      0x000365b0       0x6c kernel/vsprintf.o
+                                 0xac (松开之前的大小)
+ .eh_frame      0x0003661c       0x64 lib/klib.o
+                                 0xa4 (松开之前的大小)
+ .eh_frame      0x00036680       0x40 lib/misc.o
+                                 0x80 (松开之前的大小)
+ *(.eh_frame.*)
+
+.sframe
+ *(.sframe)
+ *(.sframe.*)
+
+.gcc_except_table
+ *(.gcc_except_table .gcc_except_table.*)
+
+.gnu_extab
+ *(.gnu_extab*)
+
+.exception_ranges
+ *(.exception_ranges*)
+                0x00037ff4                        . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))
+
+.eh_frame
+ *(.eh_frame)
+ *(.eh_frame.*)
+
+.sframe
+ *(.sframe)
+ *(.sframe.*)
+
+.gnu_extab
+ *(.gnu_extab)
+
+.gcc_except_table
+ *(.gcc_except_table .gcc_except_table.*)
+
+.exception_ranges
+ *(.exception_ranges*)
+
+.tdata          0x00037ff4        0x0
+                [!provide]                        PROVIDE (__tdata_start = .)
+ *(.tdata .tdata.* .gnu.linkonce.td.*)
+
+.tbss
+ *(.tbss .tbss.* .gnu.linkonce.tb.*)
+ *(.tcommon)
+
+.preinit_array  0x00037ff4        0x0
+                [!provide]                        PROVIDE (__preinit_array_start = .)
+ *(.preinit_array)
+                [!provide]                        PROVIDE (__preinit_array_end = .)
+
+.init_array     0x00037ff4        0x0
+                [!provide]                        PROVIDE (__init_array_start = .)
+ *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
+ *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
+                [!provide]                        PROVIDE (__init_array_end = .)
+
+.fini_array     0x00037ff4        0x0
+                [!provide]                        PROVIDE (__fini_array_start = .)
+ *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
+ *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
+                [!provide]                        PROVIDE (__fini_array_end = .)
+
+.ctors
+ *crtbegin.o(.ctors)
+ *crtbegin?.o(.ctors)
+ *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
+ *(SORT_BY_NAME(.ctors.*))
+ *(.ctors)
+
+.dtors
+ *crtbegin.o(.dtors)
+ *crtbegin?.o(.dtors)
+ *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
+ *(SORT_BY_NAME(.dtors.*))
+ *(.dtors)
+
+.jcr
+ *(.jcr)
+
+.data.rel.ro
+ *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
+ *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)
+
+.dynamic
+ *(.dynamic)
+
+.got            0x00037ff4        0x0
+ *(.got)
+ .got           0x00037ff4        0x0 kernel/kernel.o
+ *(.igot)
+                0x00037ff4                        . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)
+
+.got.plt        0x00037ff4        0xc
+ *(.got.plt)
+ .got.plt       0x00037ff4        0xc kernel/kernel.o
+                0x00037ff4                _GLOBAL_OFFSET_TABLE_
+ *(.igot.plt)
+ .igot.plt      0x00038000        0x0 kernel/kernel.o
+
+.data           0x00038000      0x704
+ *(.data .data.* .gnu.linkonce.d.*)
+ .data          0x00038000        0x2 kernel/kernel.o
+ .data          0x00038002        0x0 kernel/start.o
+ .data          0x00038002        0x0 kernel/main.o
+ .data          0x00038002        0x0 kernel/clock.o
+ *fill*         0x00038002       0x1e 
+ .data          0x00038020      0x600 kernel/keyboard.o
+                0x00038020                keymap
+ .data          0x00038620        0x0 kernel/tty.o
+ .data          0x00038620        0x0 kernel/console.o
+ .data          0x00038620        0x0 kernel/i8259.o
+ .data          0x00038620        0x0 kernel/global.o
+ .data.rel      0x00038620       0xe4 kernel/global.o
+                0x00038620                task_table
+                0x00038680                user_proc_table
+                0x000386f8                sys_call_table
+ .data          0x00038704        0x0 kernel/protect.o
+ .data          0x00038704        0x0 kernel/proc.o
+ .data          0x00038704        0x0 kernel/systask.o
+ .data          0x00038704        0x0 kernel/printf.o
+ .data          0x00038704        0x0 kernel/vsprintf.o
+ .data          0x00038704        0x0 lib/klib.o
+ .data          0x00038704        0x0 lib/misc.o
+
+.data1
+ *(.data1)
+                0x00038704                        _edata = .
+                [!provide]                        PROVIDE (edata = .)
+                0x00038704                        . = ALIGN (ALIGNOF (NEXT_SECTION))
+                0x00038720                        __bss_start = .
+
+.bss            0x00038720    0x2a500
+ *(.dynbss)
+ *(.bss .bss.* .gnu.linkonce.b.*)
+ .bss           0x00038720      0x800 kernel/kernel.o
+ .bss           0x00038f20        0x0 kernel/start.o
+ .bss           0x00038f20        0x0 kernel/main.o
+ .bss           0x00038f20        0x0 kernel/clock.o
+ .bss           0x00038f20       0x58 kernel/keyboard.o
+ .bss           0x00038f78        0x0 kernel/tty.o
+ .bss           0x00038f78        0x0 kernel/console.o
+ .bss           0x00038f78        0x0 kernel/i8259.o
+ *fill*         0x00038f78        0x8 
+ .bss           0x00038f80    0x29ca0 kernel/global.o
+                0x00038f80                ticks
+                0x00038f84                disp_pos
+                0x00038f88                gdt_ptr
+                0x00038fa0                gdt
+                0x000393a0                idt_ptr
+                0x000393c0                idt
+                0x00039bc0                k_reenter
+                0x00039bc4                nr_current_console
+                0x00039be0                tss
+                0x00039c48                p_proc_ready
+                0x00039c60                proc_table
+                0x00039f60                task_stack
+                0x00061f60                tty_table
+                0x00062ba0                console_table
+                0x00062be0                irq_table
+ .bss           0x00062c20        0x0 kernel/protect.o
+ .bss           0x00062c20        0x0 kernel/proc.o
+ .bss           0x00062c20        0x0 kernel/systask.o
+ .bss           0x00062c20        0x0 kernel/printf.o
+ .bss           0x00062c20        0x0 kernel/vsprintf.o
+ .bss           0x00062c20        0x0 lib/klib.o
+ .bss           0x00062c20        0x0 lib/misc.o
+ *(COMMON)
+                0x00062c20                        . = ALIGN ((. != 0x0)?0x4:0x1)
+                0x00062c20                        . = ALIGN (0x4)
+                0x00062c20                        . = SEGMENT_START ("ldata-segment", .)
+                0x00062c20                        . = ALIGN (0x4)
+                0x00062c20                        _end = .
+                [!provide]                        PROVIDE (end = .)
+                0x00062c20                        . = DATA_SEGMENT_END (.)
+
+.stab
+ *(.stab)
+
+.stabstr
+ *(.stabstr)
+
+.stab.excl
+ *(.stab.excl)
+
+.stab.exclstr
+ *(.stab.exclstr)
+
+.stab.index
+ *(.stab.index)
+
+.stab.indexstr
+ *(.stab.indexstr)
+
+.comment        0x00000000       0x1b
+ *(.comment)
+ .comment       0x00000000       0x1b kernel/start.o
+                                 0x1c (松开之前的大小)
+ .comment       0x0000001b       0x1c kernel/main.o
+ .comment       0x0000001b       0x1c kernel/clock.o
+ .comment       0x0000001b       0x1c kernel/keyboard.o
+ .comment       0x0000001b       0x1c kernel/tty.o
+ .comment       0x0000001b       0x1c kernel/console.o
+ .comment       0x0000001b       0x1c kernel/i8259.o
+ .comment       0x0000001b       0x1c kernel/global.o
+ .comment       0x0000001b       0x1c kernel/protect.o
+ .comment       0x0000001b       0x1c kernel/proc.o
+ .comment       0x0000001b       0x1c kernel/systask.o
+ .comment       0x0000001b       0x1c kernel/printf.o
+ .comment       0x0000001b       0x1c kernel/vsprintf.o
+ .comment       0x0000001b       0x1c lib/klib.o
+ .comment       0x0000001b       0x1c lib/misc.o
+
+.gnu.build.attributes
+ *(.gnu.build.attributes .gnu.build.attributes.*)
+
+.debug
+ *(.debug)
+
+.line
+ *(.line)
+
+.debug_srcinfo
+ *(.debug_srcinfo)
+
+.debug_sfnames
+ *(.debug_sfnames)
+
+.debug_aranges  0x00000000      0x258
+ *(.debug_aranges)
+ .debug_aranges
+                0x00000000       0x20 kernel/kernel.o
+ .debug_aranges
+                0x00000020       0x20 kernel/syscall.o
+ .debug_aranges
+                0x00000040       0x20 kernel/start.o
+ .debug_aranges
+                0x00000060       0x20 kernel/main.o
+ .debug_aranges
+                0x00000080       0x20 kernel/clock.o
+ .debug_aranges
+                0x000000a0       0x20 kernel/keyboard.o
+ .debug_aranges
+                0x000000c0       0x20 kernel/tty.o
+ .debug_aranges
+                0x000000e0       0x20 kernel/console.o
+ .debug_aranges
+                0x00000100       0x20 kernel/i8259.o
+ .debug_aranges
+                0x00000120       0x18 kernel/global.o
+ .debug_aranges
+                0x00000138       0x20 kernel/protect.o
+ .debug_aranges
+                0x00000158       0x20 kernel/proc.o
+ .debug_aranges
+                0x00000178       0x20 kernel/systask.o
+ .debug_aranges
+                0x00000198       0x20 kernel/printf.o
+ .debug_aranges
+                0x000001b8       0x20 kernel/vsprintf.o
+ .debug_aranges
+                0x000001d8       0x20 lib/kliba.o
+ .debug_aranges
+                0x000001f8       0x20 lib/klib.o
+ .debug_aranges
+                0x00000218       0x20 lib/string.o
+ .debug_aranges
+                0x00000238       0x20 lib/misc.o
+
+.debug_pubnames
+                0x00000000        0x0
+ *(.debug_pubnames)
+ .debug_pubnames
+                0x00000000        0x0 kernel/kernel.o
+ .debug_pubnames
+                0x00000000        0x0 kernel/syscall.o
+ .debug_pubnames
+                0x00000000        0x0 lib/kliba.o
+ .debug_pubnames
+                0x00000000        0x0 lib/string.o
+
+.debug_info     0x00000000     0x4732
+ *(.debug_info .gnu.linkonce.wi.*)
+ .debug_info    0x00000000       0x6c kernel/kernel.o
+ .debug_info    0x0000006c       0x6d kernel/syscall.o
+ .debug_info    0x000000d9      0x201 kernel/start.o
+ .debug_info    0x000002da      0x76f kernel/main.o
+ .debug_info    0x00000a49      0x527 kernel/clock.o
+ .debug_info    0x00000f70      0x4ca kernel/keyboard.o
+ .debug_info    0x0000143a      0x814 kernel/tty.o
+ .debug_info    0x00001c4e      0x326 kernel/console.o
+ .debug_info    0x00001f74      0x158 kernel/i8259.o
+ .debug_info    0x000020cc      0xa19 kernel/global.o
+ .debug_info    0x00002ae5      0xa49 kernel/protect.o
+ .debug_info    0x0000352e      0x987 kernel/proc.o
+ .debug_info    0x00003eb5      0x248 kernel/systask.o
+ .debug_info    0x000040fd      0x100 kernel/printf.o
+ .debug_info    0x000041fd      0x229 kernel/vsprintf.o
+ .debug_info    0x00004426       0x65 lib/kliba.o
+ .debug_info    0x0000448b      0x159 lib/klib.o
+ .debug_info    0x000045e4       0x66 lib/string.o
+ .debug_info    0x0000464a       0xe8 lib/misc.o
+
+.debug_abbrev   0x00000000     0x17b2
+ *(.debug_abbrev)
+ .debug_abbrev  0x00000000       0x1d kernel/kernel.o
+ .debug_abbrev  0x0000001d       0x1d kernel/syscall.o
+ .debug_abbrev  0x0000003a      0x123 kernel/start.o
+ .debug_abbrev  0x0000015d      0x1fd kernel/main.o
+ .debug_abbrev  0x0000035a      0x1b6 kernel/clock.o
+ .debug_abbrev  0x00000510      0x218 kernel/keyboard.o
+ .debug_abbrev  0x00000728      0x236 kernel/tty.o
+ .debug_abbrev  0x0000095e      0x183 kernel/console.o
+ .debug_abbrev  0x00000ae1      0x103 kernel/i8259.o
+ .debug_abbrev  0x00000be4      0x1c3 kernel/global.o
+ .debug_abbrev  0x00000da7      0x20f kernel/protect.o
+ .debug_abbrev  0x00000fb6      0x2cf kernel/proc.o
+ .debug_abbrev  0x00001285      0x160 kernel/systask.o
+ .debug_abbrev  0x000013e5       0xbe kernel/printf.o
+ .debug_abbrev  0x000014a3      0x125 kernel/vsprintf.o
+ .debug_abbrev  0x000015c8       0x1d lib/kliba.o
+ .debug_abbrev  0x000015e5       0xfb lib/klib.o
+ .debug_abbrev  0x000016e0       0x1d lib/string.o
+ .debug_abbrev  0x000016fd       0xb5 lib/misc.o
+
+.debug_line     0x00000000     0x1d81
+ *(.debug_line .debug_line.* .debug_line_end)
+ .debug_line    0x00000000      0x1ca kernel/kernel.o
+ .debug_line    0x000001ca       0x4b kernel/syscall.o
+ .debug_line    0x00000215       0xa2 kernel/start.o
+ .debug_line    0x000002b7      0x1b2 kernel/main.o
+ .debug_line    0x00000469       0xc7 kernel/clock.o
+ .debug_line    0x00000530      0x3ef kernel/keyboard.o
+ .debug_line    0x0000091f      0x2b7 kernel/tty.o
+ .debug_line    0x00000bd6      0x204 kernel/console.o
+ .debug_line    0x00000dda       0xa3 kernel/i8259.o
+ .debug_line    0x00000e7d       0x61 kernel/global.o
+ .debug_line    0x00000ede      0x1c3 kernel/protect.o
+ .debug_line    0x000010a1      0x773 kernel/proc.o
+ .debug_line    0x00001814       0x81 kernel/systask.o
+ .debug_line    0x00001895       0x6e kernel/printf.o
+ .debug_line    0x00001903      0x1df kernel/vsprintf.o
+ .debug_line    0x00001ae2       0xb5 lib/kliba.o
+ .debug_line    0x00001b97       0xfa lib/klib.o
+ .debug_line    0x00001c91       0x80 lib/string.o
+ .debug_line    0x00001d11       0x70 lib/misc.o
+
+.debug_frame    0x00000000        0x0
+ *(.debug_frame)
+ .debug_frame   0x00000000        0x0 kernel/kernel.o
+ .debug_frame   0x00000000        0x0 kernel/syscall.o
+ .debug_frame   0x00000000        0x0 lib/kliba.o
+ .debug_frame   0x00000000        0x0 lib/string.o
+
+.debug_str      0x00000000      0xabe
+ *(.debug_str)
+ .debug_str     0x00000000      0xabe kernel/start.o
+                                0x187 (松开之前的大小)
+ .debug_str     0x00000abe      0x363 kernel/main.o
+ .debug_str     0x00000abe      0x298 kernel/clock.o
+ .debug_str     0x00000abe      0x2bb kernel/keyboard.o
+ .debug_str     0x00000abe      0x3bc kernel/tty.o
+ .debug_str     0x00000abe      0x248 kernel/console.o
+ .debug_str     0x00000abe      0x11c kernel/i8259.o
+ .debug_str     0x00000abe      0x401 kernel/global.o
+ .debug_str     0x00000abe      0x4f2 kernel/protect.o
+ .debug_str     0x00000abe      0x3ae kernel/proc.o
+ .debug_str     0x00000abe      0x15f kernel/systask.o
+ .debug_str     0x00000abe       0xce kernel/printf.o
+ .debug_str     0x00000abe      0x105 kernel/vsprintf.o
+ .debug_str     0x00000abe       0xe3 lib/klib.o
+ .debug_str     0x00000abe       0xeb lib/misc.o
+
+.debug_loc      0x00000000        0x0
+ *(.debug_loc)
+ .debug_loc     0x00000000        0x0 kernel/kernel.o
+ .debug_loc     0x00000000        0x0 kernel/syscall.o
+ .debug_loc     0x00000000        0x0 lib/kliba.o
+ .debug_loc     0x00000000        0x0 lib/string.o
+
+.debug_macinfo
+ *(.debug_macinfo)
+
+.debug_weaknames
+ *(.debug_weaknames)
+
+.debug_funcnames
+ *(.debug_funcnames)
+
+.debug_typenames
+ *(.debug_typenames)
+
+.debug_varnames
+ *(.debug_varnames)
+
+.debug_pubtypes
+ *(.debug_pubtypes)
+
+.debug_ranges
+ *(.debug_ranges)
+
+.debug_addr
+ *(.debug_addr)
+
+.debug_line_str
+                0x00000000      0x175
+ *(.debug_line_str)
+ .debug_line_str
+                0x00000000      0x175 kernel/start.o
+                                 0x9b (松开之前的大小)
+ .debug_line_str
+                0x00000175       0xa7 kernel/main.o
+ .debug_line_str
+                0x00000175       0x99 kernel/clock.o
+ .debug_line_str
+                0x00000175       0xac kernel/keyboard.o
+ .debug_line_str
+                0x00000175       0xa3 kernel/tty.o
+ .debug_line_str
+                0x00000175       0x9e kernel/console.o
+ .debug_line_str
+                0x00000175       0x88 kernel/i8259.o
+ .debug_line_str
+                0x00000175       0xac kernel/global.o
+ .debug_line_str
+                0x00000175       0xa8 kernel/protect.o
+ .debug_line_str
+                0x00000175       0xa7 kernel/proc.o
+ .debug_line_str
+                0x00000175       0x96 kernel/systask.o
+ .debug_line_str
+                0x00000175       0x82 kernel/printf.o
+ .debug_line_str
+                0x00000175       0x91 kernel/vsprintf.o
+ .debug_line_str
+                0x00000175       0x6f lib/klib.o
+ .debug_line_str
+                0x00000175       0x6f lib/misc.o
+
+.debug_loclists
+ *(.debug_loclists)
+
+.debug_macro
+ *(.debug_macro)
+
+.debug_names
+ *(.debug_names)
+
+.debug_rnglists
+ *(.debug_rnglists)
+
+.debug_str_offsets
+ *(.debug_str_offsets)
+
+.debug_sup
+ *(.debug_sup)
+
+.gnu.attributes
+ *(.gnu.attributes)
+
+/DISCARD/
+ *(.note.GNU-stack)
+ *(.gnu_debuglink)
+ *(.gnu.lto_*)
+OUTPUT(kernel.bin elf32-i386)
diff --git a/scripts/buildimg.sh b/scripts/buildimg.sh
new file mode 100755
index 0000000..4710870
--- /dev/null
+++ b/scripts/buildimg.sh
@@ -0,0 +1,8 @@
+#!/bin/bash
+dd if=boot/boot.bin of=a.img bs=512 count=1 conv=notrunc
+LOOPDEV=$(udisksctl loop-setup -f a.img | grep -o '/dev/loop[0-9]*')
+MOUNTPOINT=$(udisksctl mount -b ${LOOPDEV} | grep -o "/run/media/$USER/[a-zA-Z0-9]*")
+cp -fv boot/loader.bin ${MOUNTPOINT}
+cp -fv kernel.bin ${MOUNTPOINT}
+udisksctl unmount -b ${LOOPDEV}
+udisksctl loop-delete -b ${LOOPDEV}
\ No newline at end of file
